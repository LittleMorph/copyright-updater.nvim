*copyright-updater.txt*               Automatic update of Copyright statements
*copyright-updater.nvim*

==============================================================================
CONTENTS                                                   *copyright-updater*

    Introduction ........................... |copyright-updater-intro|
    Configuration .......................... |copyright-updater-configuration|
    Commands ............................... |copyright-updater-commands|
    Functions .............................. |copyright-updater-functions|

==============================================================================
INTRODUCTION                                         *copyright-updater-intro*

copyright-updater adds an |autocommand| to update the year in copyright
messages when saving a modified buffer. Inspired by vim Tip 1521.
See <https://vim.fandom.com/wiki/Automatically_Update_Copyright_Notice_in_Files>

==============================================================================
CONFIGURATION                                *copyright-updater-configuration*

For default configuration:
>
    require('copyright-updater').setup()
<
Full default configuration:
>
    require('copyright-updater').setup {
        -- Whether the plugin should be active on startup
        enabled = true,
        -- Print status when enabling, disabling, or toggling the plugin
        silent = false,
        -- Return cursor to current line after update
        return_cursor = false,
        style = {
            -- Advanced style allows multiple ranges separated by comma
            -- Simple style use only a single range
            kind = 'advanced', -- advanced | simple
            advanced = {
                space_after_comma = false,
                force = false -- Apply the space_after_comma setting to existing commas
            },
            simple = {
                force = false, -- Allow reducing advanced style to simple style
            }
        },
        -- To disable a key mapping, either assign it an empty value or nil
        mappings = {
            toggle = '<leader>C',  -- Toggle the plugin on/off
            enable = nil,  -- Enable the plugin globally
            disable = nil, -- Disable the plugin globally
            update = nil   -- Update current buffer
        },
        limiters = {
            range = '%', -- Only update copyright statements in this range
            post_pattern = '', -- E.g. a company name to match after the year list
            files = {
                -- Change the types list from a blacklist to a whitelist
                type_whitelist = false,
                -- List of file types to blacklist (or whitelist)
                types = {},
                -- Change the names list from a blacklist to a whitelist
                name_whitelist = false,
                -- List of file name patterns to blacklist (or whitelist)
                -- Matches on the entire path, not just the filename
                names = {}
            }
        }
    }
<

Configuration options~

                                                   *copyright-updater-enabled*
enabled             Type: `boolean` (default: `true`)
                    Defines whether the plugin should be active on startup.


                                                    *copyright-updater-silent*
silent              Type: `boolean` (default: `false`)
                    Whether the plugin should report when it is enabled and
                    disabled in the command line.


                                             *copyright-updater-return_cursor*
return_cursor       Type: `boolean` (default: `false`)
                    Whether the cursor should be returned to the current
                    position in the buffer after a copyright update.


                                                *copyright-updater-style.kind*
style.kind          Type: `string` (default: `advanced`)
                    The style to use and expect copyright statements to
                    follow. Possible values are `advanced` and `simple`. See
                    |copyright-updater-styles|.


                          *copyright-updater-style.advanced.space_after_comma*
style.advanced.space_after_comma
                    Type: `boolean` (default: `false`)
                    Add a space after each added comma in advanced style.


                                      *copyright-updater-style.advanced.force*
style.advanced.force
                    Type: `boolean` (default: `false`)

                    Force the configured `space_after_comma` setting on
                    existing copyright lines. Only has an effect if
                    'style.kind' is set to `advanced`.


                                        *copyright-updater-style.simple.force*
style.simple.force  Type: `boolean` (default: `false`)
                    Force the simple style on existing copyright lines. Only
                    has an effect if 'style.kind' is set to `simple`, and
                    will force advanced ranges to a single range.


                                           *copyright-updater-mappings.toggle*
mappings.toggle     Type: `string` (default: `<leader>C`)
                    Key mapping for toggling the plugin on/off.


                                           *copyright-updater-mappings.enable*
mappings.enable     Type: `string` (default: `nil`)
                    Key mapping for enabling the plugin.


                                          *copyright-updater-mappings.disable*
mappings.disable    Type: `string` (default: `nil`)
                    Key mapping for disabling the plugin.


                                           *copyright-updater-mappings.update*
mappings.update     Type: `string` (default: `nil`)
                    Key mapping to update the current buffer. Has the same
                    effect as calling |:UpdateCopyright| without the bang
                    modifier (`!`). Will respect all configured file limiters.


                                            *copyright-updater-limiters.range*
limiters.range      Type: `string` (default: `%`)
                    Set the [range] on which copyright-updater should operate.
                    Only copyright statements found within the set range will
                    be updated. Defaults to the entire file.


                                     *copyright-updater-limiters.post_pattern*
limiters.post_pattern
                    Type: `string` (default: `''`)
                    Pattern that must match post the year list in updated
                    copyright lines. Can be a simple string, or complex regex.
                    E.g. to match only company names "Corp A/S" and "New Org
                    Inc", us a patter like this:
>
                        \\%(Corp A/S\\|New Org Inc\\)
<
                    Regexes are "magic" and case-insensitive by default,
                    regardless of 'magic' and 'ignorecase'.

                    Backslash characters must be escaped with another
                    backslash. See |pattern.txt| for more info on supported
                    regex.

                    The pattern is applied at the end of the copyright line,
                    so if further characters are expected, append a `.*` at
                    the end.


                                      *copyright-updater-limiters.files.types*
limiters.files.types
                    Type: `list` (default: `{}`)
                    List of file types to blacklist so the plugin wont update
                    copyright statements in files of those types. If
                    |copyright-updater-limiters.files.type_whitelist| is set
                    to `true`, the list becomes a white list.


                             *copyright-updater-limiters.files.type_whitelist*
limiters.files.type_whitelist
                    Type: `boolean` (default: `false`)
                    Turn the filetypes list into a white list
                    (|copyright-updater-limiters.files.types|). If set to the
                    default value of `false`, the filetypes list is a
                    blacklist.


                                      *copyright-updater-limiters.files.names*
limiters.files.names
                    Type: `list` (default: `{}`)

                    List of file name regex patterns to blacklist so the
                    plugin wont update copyright statements in files matching
                    these names.
                    If |copyright-updater-limiters.files.type_whitelist| is
                    set to `true`, the list becomes a white list.

                    Regexes are "magic" and case-sensitive by
                    default, regardless of 'magic' and 'ignorecase'.

                    Contrary to the `limiters.files.types` list, entries in
                    this list are considered regex patterns that will be
                    matched against the full path of the edited file. Useful
                    to limit automatic copyright updates to e.g. specific
                    project directories. Example pattern for project "My
                    awesome project":
>
                        '/my-awesome-project/'
<
                    Be careful with too generic patterns in this list, as they
                    might match unwanted files. E.g. consider the patterns:
>
                        'project.*',
                        'temp'
<
                    Intended to match all project files and everything under
                    temp directories. Because the patterns are matched against
                    the entire file name path, they will also match things
                    like the directory `project-foo` or a file named
                    `temperature`. To avoid such unintended matches, take
                    care to be as specific with the patterns as possible. A
                    better way to accomplish the above example would be this:
>
                        '/project[^/]*$',
                        '/temp/'
<
                    These patterns prevents `project` from being a directory,
                    and ensures it is the beginning of a filename. In the same
                    way `temp` is now forced to be the complete directory name.


                             *copyright-updater-limiters.files.name_whitelist*
limiters.files.name_whitelist
                    Type: `boolean` (default: `false`)
                    Turn the `files.names` list into a white list
                    (|copyright-updater-limiters.files.names|). If set to the
                    default value of `false`, the filenames list is a
                    blacklist.

==============================================================================
STYLES                                              *copyright-updater-styles*

Two styles are supported - Advanced and Simple. All styles allow for an
optional `(c)`, `©`, or `&copy` between the word `copyright` and the first year.
The word `copyright` is matched in any case. Any amount of space is allowed
between `copyright`, the optional symbol, the year separators (`-` and `,`),
and the years.

    Styles:~
       Advanced     Allows multiple ranges separated by commas. E.g.:
>
                        Copyright (c) 2007,2009-2012,2014,2016,2018-2020
<
         Simple     Only allow a single range - no gabs. E.g:
>
                        Copyright © 2007-2020
<
==============================================================================
COMMANDS                                          *copyright-updater-commands*

                                                            *:UpdateCopyright*

Update copyright statements in the current buffer.

If `:UpdateCopyright` is called with a range, it will use the specified range
and ignore the configured range limiter (`limiters.range`).

If called with anything following the command, it is taken to be a post
pattern, overriding the configured post pattern limiter
(`limiters.post_pattern`).

If called with the bang modifier (`:UpdateCopyright!`) any configured limiters
are ignored. E.g. to force update an entire buffer ignoring all limiters, use:
>
    :UpdateCopyright!
<
The specified range and/or post pattern will be respected if used together
with the bang modifier. E.g. to update any copyright statements on the first
three lines of the buffer, with the post pattern "New Org Inc.", ignoring all
other limiters, use:
>
    :1,3UpdateCoyright! New Org Inc.
<
==============================================================================
FUNCTIONS                                        *copyright-updater-functions*

Four functions are exposed for integration with other scripts or plugins.


update({force})                                   *copyright-updater.update()*
    Update copyrights in the current buffer.

    Parameters: ~
        {force}     (`boolean`) Whether to ignore the configured file list.


enable()                                          *copyright-updater.enable()*
    Enables the plugin.

disable()                                        *copyright-updater.disable()*
    Disables the plugin.

toggle()                                          *copyright-updater.toggle()*
    Toggles the plugin on/off.


vim:tw=78:ts=8:noet:ft=help:norl:
